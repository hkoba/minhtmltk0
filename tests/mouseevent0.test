#!/bin/sh
# -*- mode: tcl; coding: utf-8 -*-
# the next line restarts using tclsh \
    exec tclsh -encoding utf-8 "$0" ${1+"$@"}
    
package require tcltest
namespace import tcltest::test

package require struct::list

set P mouseevent0
set type ::minhtmltk

test $P-init load -body {
    # set abs [file normalize [info script]]
    # source [file join [file dirname [file dirname $abs]] \
    # 		[file rootname [file tail $abs]].tcl]
    set abs [file normalize [info script]]
    source [file join [file dirname [file dirname $abs]] \
		minhtmltk0.tcl]
} -result $type

namespace import ::minhtmltk::utils::*

proc iota1 {n} {
    struct::list mapfor v [struct::list iota $n] {expr {$v+1}}
}

#========================================

test $P-create "" -body {
    $type .ht -debug yes
} -result .ht

#========================================
# 

incr D
test $P-$D-ready-eager "ready (eager)" -body {
    
    set ::out ""
    bind .ht <<DocumentReady>> [list set ::out READY]

    .ht configure -emit-ready-immediately yes

    .ht parse -final {
	<h2>Hello!</h2>
    }
    # Without entering eventloop.

    set ::out
} -result READY

.ht Reset
test $P-$D-ready-lazy "ready (lazy)" -body {
    
    .ht configure -emit-ready-immediately no

    set ::out ""

    .ht parse -final {
	<h2>Hello!</h2>
    }
    
    # Enter eventloop.
    update idletask; # This is required (unless -emit-ready-immediately is yes)

    set ::out
} -result READY

.ht Reset; # Note: This resets [$ht on trigger]s too!
test $P-$D-on-ready "(global) on event command" -body {

    set ::out ""
    bind .ht <<DocumentReady>> [list lappend ::out We are]
    .ht on ready [list lappend ::out READY!!!!]
    # [bind] handler and [$ht on ] handler can coexist and called in this order.

    # puts stderr handlers=[.ht node event dump-handlers]
    # puts stderr ready=[dict get [.ht node event dump-handlers] "" ready]

    .ht parse -final {
	<h2>Hello!</h2>
    }
    
    update idletask;

    set ::out
} -result {We are READY!!!!}

#========================================

proc + {a b} {expr {$a + $b}}
proc avg {a b} {expr {($a + $b)/2}}
proc center bbox {
    lassign $bbox x1 y1 x2 y2
    list [avg $x1 $x2] [avg $y1 $y2]
}

incr D
.ht Reset
test $P-$D-click-[incr I] "on h2 click" -body {
    
    bind .ht <<DocumentReady>> {}; # Make sure previous 'ready' is removed.

    .ht parse -final {
	<h2>Hello!</h2>
    }
    
    set ::out ""
    .ht node event on h2 click {
	set ::out "Clicked!"
    }
    
    update idletask

    set h2node [.ht search h2]
    #puts stderr h2node=$h2node
    lassign [center [.ht bbox $h2node]] cx cy
    minhtmltk::utils::adjust-coords-from [.ht html] .ht cx cy

    .ht Press   .ht $cx $cy
    .ht Release .ht $cx $cy
    
    set ::out

} -result Clicked!

catch {destroy .}
